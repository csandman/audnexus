openapi: 3.0.0
info:
  title: Audnexus
  description: |
    Aggegate audiobook data
  contact: {}
  license:
    name: GPL v3
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Audnexus
  url: 'https://github.com/djdembeck/audnexus'
servers:
  - url: 'https://api.audnex.us'
    description: Public API
tags:
  - name: Authors
    description: Author functions
  - name: Books
    description: Book functions
  - name: Chapters
    description: Chapter functions
  - name: Search
    description: Search functions
paths:
  '/books/{ASIN}':
    get:
      summary: Find book by ID
      description: Returns a single book
      operationId: getBookById
      parameters:
        - name: ASIN
          in: path
          description: ID of book to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: seedAuthors
          in: query
          description: Whether to seed authors of book
          required: false
          explode: false
          schema:
            type: number
            enum:
              - 0
              - 1
        - name: update
          in: query
          description: Have server check for updated data upstream
          required: false
          explode: false
          schema:
            type: number
            enum:
              - 0
              - 1
        - schema:
            type: string
            enum:
              - au
              - ca
              - de
              - es
              - fr
              - in
              - it
              - jp
              - us
              - uk
            default: us
          in: query
          name: region
          description: Region code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
      tags:
        - Books
    delete:
      summary: Deletes a book
      operationId: deleteBook
      parameters:
        - name: ASIN
          in: path
          description: Book id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - schema:
            type: string
            enum:
              - au
              - ca
              - de
              - es
              - fr
              - in
              - it
              - jp
              - us
              - uk
            default: us
          in: query
          name: region
          description: Region code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
              examples: {}
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
              examples: {}
      description: Deletes a single book
      tags:
        - Books
    parameters:
      - schema:
          type: string
        name: ASIN
        in: path
        required: true
        description: Audible.com ID
  '/books/{ASIN}/chapters':
    get:
      summary: Find chapters by ASIN
      description: Returns a single book's chapters
      operationId: getChapterById
      parameters:
        - name: ASIN
          in: path
          description: ID of book to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - schema:
            type: number
            enum:
              - 0
              - 1
          in: query
          name: update
          description: Have server check for updated data upstream
        - schema:
            type: string
            enum:
              - au
              - ca
              - de
              - es
              - fr
              - in
              - it
              - jp
              - us
              - uk
            default: us
          in: query
          name: region
          description: Region code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
            application/xml:
              schema:
                $ref: '#/components/schemas/Chapter'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
        '404':
          description: Chapters not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
      tags:
        - Chapters
    delete:
      summary: Delete chapters by ASIN
      operationId: delete-books-ASIN-chapters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
      description: Deletes a single book's chapters
      parameters:
        - schema:
            type: string
            enum:
              - au
              - ca
              - de
              - es
              - fr
              - in
              - it
              - jp
              - us
              - uk
            default: us
          in: query
          name: region
          description: Region code
      tags:
        - Chapters
    parameters:
      - schema:
          type: string
        name: ASIN
        in: path
        required: true
        description: Audible.com ID
  /authors:
    get:
      summary: Find authors by name
      description: 'Returns a list of authors, based on search query provided'
      operationId: searchAuthorByName
      parameters:
        - name: name
          in: query
          description: Name to search with
          required: true
          explode: false
          schema:
            type: string
        - schema:
            type: string
            enum:
              - au
              - ca
              - de
              - es
              - fr
              - in
              - it
              - jp
              - us
              - uk
            default: us
          in: query
          name: region
          description: Region code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
        '400':
          description: No search params provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
      tags:
        - Authors
        - Search
  '/authors/{ASIN}':
    get:
      summary: Find author by ID
      description: Returns a single author
      operationId: getAuthorById
      parameters:
        - name: ASIN
          in: path
          description: ID of author to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - schema:
            type: string
            enum:
              - '0'
              - '1'
          in: query
          description: Have server check for updated data upstream
          name: update
        - schema:
            type: string
            enum:
              - au
              - ca
              - de
              - es
              - fr
              - in
              - it
              - jp
              - us
              - uk
            default: us
          in: query
          name: region
          description: Region code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
            application/xml:
              schema:
                $ref: '#/components/schemas/Author'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
        '404':
          description: Author not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
      tags:
        - Authors
    delete:
      summary: Deletes a author
      operationId: deleteAuthor
      parameters:
        - name: ASIN
          in: path
          description: Author id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - schema:
            type: string
            enum:
              - au
              - ca
              - de
              - es
              - fr
              - in
              - it
              - jp
              - us
              - uk
            default: us
          in: query
          name: region
          description: Region code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
        '404':
          description: Author not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  error:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    statusCode: 400
                    error: Bad Request
                    message: Bad ASIN
      description: Deletes a single author
      tags:
        - Authors
    parameters:
      - schema:
          type: string
        name: ASIN
        in: path
        required: true
        description: Audible.com ID
      - schema:
          type: string
          enum:
            - au
            - ca
            - de
            - es
            - fr
            - in
            - it
            - jp
            - us
            - uk
          default: us
        in: query
        name: region
        description: Region code
components:
  schemas:
    Author:
      type: object
      properties:
        aliases:
          type: array
          items:
            type: string
        asin:
          type: string
        birthDate:
          type: string
          format: date
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
        description:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        image:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Author_links'
        location:
          type: string
        name:
          type: string
        region:
          type: string
          enum:
            - au
            - ca
            - de
            - es
            - fr
            - in
            - it
            - jp
            - us
            - uk
          default: us
        series:
          type: string
      required:
        - asin
        - description
        - name
        - region
    Book:
      type: object
      xml:
        name: Book
      properties:
        asin:
          type: string
        authors:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        description:
          type: string
        formatType:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        image:
          type: string
          format: uri
        language:
          type: string
        narrators:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        publisherName:
          type: string
        rating:
          multipleOf: 0.1
          type: number
        region:
          type: string
          enum:
            - au
            - ca
            - de
            - es
            - fr
            - in
            - it
            - jp
            - us
            - uk
          default: us
        releaseDate:
          type: string
          format: date
        runtimeLengthMin:
          type: number
        seriesPrimary:
          $ref: '#/components/schemas/Series'
        seriesSecondary:
          $ref: '#/components/schemas/Series'
        subtitle:
          type: string
        summary:
          type: string
        title:
          type: string
      required:
        - asin
        - authors
        - description
        - formatType
        - language
        - publisherName
        - rating
        - region
        - releaseDate
        - runtimeLengthMin
        - summary
        - title
    Chapter:
      required:
        - asin
        - brandIntroDurationMs
        - brandOutroDurationMs
        - chapters
        - isAccurate
        - region
        - runtimeLengthMs
        - runtimeLengthSec
      type: object
      properties:
        asin:
          type: string
        brandIntroDurationMs:
          type: number
        brandOutroDurationMs:
          type: number
        chapters:
          type: array
          items:
            $ref: '#/components/schemas/Chapter_chapters'
        isAccurate:
          type: boolean
        region:
          type: string
          enum:
            - au
            - ca
            - de
            - es
            - fr
            - in
            - it
            - jp
            - us
            - uk
          default: us
        runtimeLengthMs:
          type: number
        runtimeLengthSec:
          type: number
    Genre:
      required:
        - asin
        - name
        - type
      type: object
      properties:
        asin:
          type: string
        name:
          type: string
        type:
          type: string
      xml:
        name: Genre
    Person:
      type: object
      xml:
        name: Person
      properties:
        asin:
          type: string
        name:
          type: string
      required:
        - name
    Series:
      required:
        - name
      type: object
      properties:
        asin:
          type: string
        name:
          type: string
        position:
          type: string
      xml:
        name: Series
    Author_links:
      properties:
        link:
          type: string
        type:
          type: string
    Chapter_chapters:
      type: object
      properties:
        lengthMs:
          type: number
        startOffsetMs:
          type: number
        startOffsetSec:
          type: number
        title:
          type: string
      required:
        - lengthMs
        - startOffsetMs
        - startOffsetSec
        - title
